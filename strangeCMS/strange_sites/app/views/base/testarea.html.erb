<div class="container_48">
	
	<div class="fl_box_710">
		<div class="fl_box_110 alpha"><div class="in_fl_box">fineline - 110</div></div>
		<div class="fl_box_110"><div class="in_fl_box">fineline - 110</div></div>
		<div class="fl_box_110"><div class="in_fl_box">fineline - 110</div></div>
		<div class="fl_box_110"><div class="in_fl_box">fineline - 110</div></div>
		<div class="fl_box_110"><div class="in_fl_box">fineline - 110</div></div>
		<div class="fl_box_110 omega"><div class="in_fl_box">fineline - 110</div></div>
<br/><br/>
		<div class="fl_box_170 alpha"><div class="in_fl_box">fineline - 170</div></div>
		<div class="fl_box_170"><div class="in_fl_box">fineline - 170</div></div>
		<div class="fl_box_170"><div class="in_fl_box">fineline - 170</div></div>
		<div class="fl_box_170 omega"><div class="in_fl_box">fineline - 170</div></div>
<br/><br/>
		<div class="fl_box_230 alpha"><div class="in_fl_box">fineline - 230</div></div>
		<div class="fl_box_230"><div class="in_fl_box">fineline - 230</div></div>
		<div class="fl_box_230 omega"><div class="in_fl_box">fineline - 230</div></div>
<br/><br/>
		<div class="fl_box_350 alpha"><div class="in_fl_box">fineline - 350</div></div>
		<div class="fl_box_350 omega"><div class="in_fl_box">fineline - 350</div></div>
<br/><br/>
		<div class="fl_box_710 alpha omega"><div class="in_fl_box">fineline - 710</div></div>
	</div>
	
	<div class="fl_box_210 push_1"><div class="in_fl_box">
			Sidebar - 210
			<br/>
			<br/>
			Sidebar - 210
			<br/>
			<br/>
			Sidebar - 210
			<br/>
			<br/>
			Sidebar - 210
			<br/>
			<br/>
	</div></div>
	
	<div class="clearfix"></div>
	
</div>
<br/>
<br/>
<div class="container_48">
	
	<div class="fl_box_110"><div class="in_fl_box">110 Px</div></div>
	<div class="fl_box_110"><div class="in_fl_box">110 Px</div></div>
	<div class="fl_box_110"><div class="in_fl_box">110 Px</div></div>
	<div class="fl_box_110"><div class="in_fl_box">110 Px</div></div>
	<div class="fl_box_110"><div class="in_fl_box">110 Px</div></div>
	<div class="fl_box_110"><div class="in_fl_box">110 Px</div></div>
	<div class="fl_box_110"><div class="in_fl_box">110 Px</div></div>
	<div class="fl_box_110"><div class="in_fl_box">110 Px</div></div>
	
	<div class="clearfix"></div>
	
</div>
<br/>
<div class="container_48">
	
	<div class="fl_box_150"><div class="in_fl_box">150 Px</div></div>
	<div class="fl_box_150"><div class="in_fl_box">150 Px</div></div>
	<div class="fl_box_150"><div class="in_fl_box">150 Px</div></div>
	<div class="fl_box_150"><div class="in_fl_box">150 Px</div></div>
	<div class="fl_box_150"><div class="in_fl_box">150 Px</div></div>
	<div class="fl_box_150"><div class="in_fl_box">150 Px</div></div>
	
	<div class="clearfix"></div>
	
</div>
<br/>
<div class="container_48">
	
	<div class="fl_box_230"><div class="in_fl_box">230 Px</div></div>
	<div class="fl_box_230"><div class="in_fl_box">230 Px</div></div>
	<div class="fl_box_230"><div class="in_fl_box">230 Px</div></div>
	<div class="fl_box_230"><div class="in_fl_box">230 Px</div></div>
	
	<div class="clearfix"></div>
	
</div>
<br/>
<div class="container_48">
	
	<div class="fl_box_310"><div class="in_fl_box">310 Px</div></div>
	<div class="fl_box_310"><div class="in_fl_box">310 Px</div></div>
	<div class="fl_box_310"><div class="in_fl_box">310 Px</div></div>

	
	<div class="clearfix"></div>
	
</div>
<br/>
<div class="container_48">
	
	<div class="fl_box_470"><div class="in_fl_box">470 Px</div></div>
	<div class="fl_box_470"><div class="in_fl_box">470 Px</div></div>

	
	<div class="clearfix"></div>
	
</div>
<br/>
<div class="container_48">
	

	<div class="fl_box_950"><div class="in_fl_box">950 Px</div></div>

	
	<div class="clearfix"></div>
	
</div>





<div class="container_48">
	

	<div class="fl_box_950">
		<script src="/javascripts/raphael.js"></script>

		<script>
		            window.onload = function () {
		                var remove = spinner("holder", 15, 25, 12, 5, "#369");
		                var form = {
		                    form: document.getElementsByTagName("form")[0],
		                    r1: document.getElementById("radius1"),
		                    r2: document.getElementById("radius2"),
		                    count: document.getElementById("count"),
		                    width: document.getElementById("width"),
		                    color: document.getElementById("color")
		                };
		                form.form.onsubmit = function () {
		                    remove();
		                    remove = spinner("holder", +form.r1.value, +form.r2.value, +form.count.value, +form.width.value, form.color.value);
		                    return false;
		                };
		            };

		            function spinner(holderid, R1, R2, count, stroke_width, colour) {
		                var sectorsCount = count || 12,
		                    color = colour || "#369",
		                    width = stroke_width || 15,
		                    r1 = Math.min(R1, R2) || 35,
		                    r2 = Math.max(R1, R2) || 60,
		                    cx = r2 + width,
		                    cy = r2 + width,
		                    r = Raphael(holderid, r2 * 2 + width * 2, r2 * 2 + width * 2),

		                    sectors = [],
		                    opacity = [],
		                    beta = 2 * Math.PI / sectorsCount,

		                    pathParams = {stroke: color, "stroke-width": width, "stroke-linecap": "round"};
		                    Raphael.getColor.reset();
		                for (var i = 0; i < sectorsCount; i++) {
		                    var alpha = beta * i - Math.PI / 2,
		                        cos = Math.cos(alpha),
		                        sin = Math.sin(alpha);
		                    opacity[i] = 1 / sectorsCount * i;
		                    sectors[i] = r.path([["M", cx + r1 * cos, cy + r1 * sin], ["L", cx + r2 * cos, cy + r2 * sin]]).attr(pathParams);
		                    if (color == "rainbow") {
		                        sectors[i].attr("stroke", Raphael.getColor());
		                    }
		                }
		                var tick;
		                (function ticker() {
		                    opacity.unshift(opacity.pop());
		                    for (var i = 0; i < sectorsCount; i++) {
		                        sectors[i].attr("opacity", opacity[i]);
		                    }
		                    r.safari();
		                    tick = setTimeout(ticker, 1000 / sectorsCount);
		                })();
		                return function () {
		                    clearTimeout(tick);
		                    r.remove();
		                };
		            }

		        </script>
		<div id="holder"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="290" height="290"><desc>Created with Raphaël</desc><defs></defs><path fill="none" stroke="#ffffff" d="M145,75L145,25" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.75; " stroke-width="25" stroke-linecap="round" opacity="0.75"></path><path fill="none" stroke="#ffffff" d="M180,84.37822173508928L205,41.07695154586736" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.833333; " stroke-width="25" stroke-linecap="round" opacity="0.8333333333333333"></path><path fill="none" stroke="#ffffff" d="M205.6217782649107,110L248.92304845413264,85" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.916667; " stroke-width="25" stroke-linecap="round" opacity="0.9166666666666666"></path><path fill="none" stroke="#ffffff" d="M215,145L265,145" style="stroke-width: 25px; stroke-linecap: round; opacity: 0; " stroke-width="25" stroke-linecap="round" opacity="0"></path><path fill="none" stroke="#ffffff" d="M205.62177826491072,180L248.92304845413264,204.99999999999997" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.0833333; " stroke-width="25" stroke-linecap="round" opacity="0.08333333333333333"></path><path fill="none" stroke="#ffffff" d="M180.00000000000003,205.6217782649107L205.00000000000006,248.9230484541326" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.166667; " stroke-width="25" stroke-linecap="round" opacity="0.16666666666666666"></path><path fill="none" stroke="#ffffff" d="M145,215L145,265" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.25; " stroke-width="25" stroke-linecap="round" opacity="0.25"></path><path fill="none" stroke="#ffffff" d="M110.00000000000001,205.62177826491072L85.00000000000003,248.92304845413264" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.333333; " stroke-width="25" stroke-linecap="round" opacity="0.3333333333333333"></path><path fill="none" stroke="#ffffff" d="M84.37822173508931,180.00000000000003L41.07695154586739,205.00000000000006" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.416667; " stroke-width="25" stroke-linecap="round" opacity="0.41666666666666663"></path><path fill="none" stroke="#ffffff" d="M75,145L25,145.00000000000003" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.5; " stroke-width="25" stroke-linecap="round" opacity="0.5"></path><path fill="none" stroke="#ffffff" d="M84.37822173508927,110.00000000000004L41.07695154586732,85.00000000000007" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.583333; " stroke-width="25" stroke-linecap="round" opacity="0.5833333333333333"></path><path fill="none" stroke="#ffffff" d="M109.99999999999997,84.37822173508931L84.99999999999994,41.07695154586739" style="stroke-width: 25px; stroke-linecap: round; opacity: 0.666667; " stroke-width="25" stroke-linecap="round" opacity="0.6666666666666666"></path></svg></div>
		≤
		<h1><%= yeah_baby_yeah %></h1>

		<%#= finelineButton(  :icon,  :blur,  :color,   :size,  :aktion, :tooltip, :title, :url, :class ) %><br/>
		<%#= finelineButton(:icon => 53, :blur => 87, :color => 'hell', :size => 48, :aktion => false) %><br/>
		<%#= finelineButton(:icon => 11, :blur => 75, :color => 'hell', :size => 32, :aktion => true) %><br/>

		<% xx = Array(1 .. 90) %>
		<% ax = Array(1 .. 25) %>
		<% sz = [18, 24, 32, 48] %>

			<% sz.each do |z| %>
				<h3><%= z %> Pixel</h3>
				<% xx.each do |x_icon| %>
					<%= finelineButton(:icon => x_icon.to_i, :blur => 90, :color => 'hell', :size => z.to_i, :class => "#{'kreis' if 2 == rand(5)}" ) %>
					<%= finelineButton(:icon => x_icon.to_i, :blur => 90, :color => 'dunkel', :size => z.to_i, :class => "#{'kreis' if 2 == rand(5)}" ) %>
				<% end %>
				<br/>
				<hr/>
				<br/>
				<% if z == 32 || z == 48 %>
					<h3><%= z %> Pixel Spezial-Icons</h3>
					<% ax.each do |a_icon| %>
						<%= finelineButton(:icon => a_icon.to_i, :blur => 90, :color => 'hell', :size => z.to_i, :aktion => true) %>
						<%= finelineButton(:icon => a_icon.to_i, :blur => 90, :color => 'dunkel', :size => z.to_i, :aktion => true) %>
					<% end %>
					<br/>
					<hr/>
					<br/>
				<% end %>
			<% end %>
		<div class="clearfix"></div>
	</div>

	
	<div class="clearfix"></div>
	
</div>





